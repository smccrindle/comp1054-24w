/* STEP 3: Apply basic layout styles */
/* Universal box-sizing with inheritance (https://css-tricks.com/box-sizing/#article-header-id-6) */
html {
	box-sizing: border-box;
}
*, *::before, *::after {
	box-sizing: inherit;
}
/* STEP 5a: Remove all diagnostic colors and margins from HEADER, MAIN, and FOOTER */
body {
	font-family: Arial, Helvetica, sans-serif;
	font-size: 110%;
	line-height: 1.4;
	/* overflow-x: hidden; */
}
/* STEP 5b: Change the colors for the HEADER and FOOTER */
header {
	background-color: #ccc;
	color: white;
	/* STEP 6: Layout the H1 and NAV horzontally in the HEADER */
	display: flex;
	justify-content: space-between;
}
/* STEP 7: Make links look better */
header nav a {
	text-decoration: none;
}
/* STEP 10: Style hamburger menu button */
#menu-icon {
	display: block;
	color: white;
	font-size: 2rem;
	margin-top: 1.5rem;
}
header nav ul {
	/* STEP 8: Style the navigation menu such that it is now a box that sits just under the hamburger menu button */
	list-style-type: none;
	position: absolute;
	left: 0;
	top: 4rem;
	padding: 1rem;
	background-color: #fff;
	border: 0.5rem solid #000;
	width: 100%;
	/* STEP 9: Hide the horizontal navigation list for small screens */
	left: -100%
}
/* STEP 12: Ensure links are full-width and easy to touch */
header nav ul a {
	display: block;
	color: black;
	padding: 0.5rem;
}
header nav ul a:hover {
	background-color: #CCC;
	color: white;
}
/* STEP 11: Reveal the navigation menu when the hamburger button is hovered over */
header nav:hover ul,
header nav:focus ul {
	left: 0;
}
main {

}
header, section, footer {
	padding: 1rem;
}
footer {
	background-color: #ccc;
	color: white;
}
/* STEP 4a: Build media query breakpoint for bigger screens (2-column layout) */
@media only screen and (width >= 35rem) {
	h1 {
		font-size: 3rem;
	}
	/* STEP 14: Size up hamburger icon a bit to match main heading */
	#menu-icon {

	}
	main {
		display: flex;
		flex-direction: row;
		flex-wrap: wrap;
	}
	main section {
		flex-basis: 50%;
	}
}
/* STEP 4b: Add another media query breakpoint for even bigger screens (4-column layout) */
@media only screen and ((width >= 60rem) or (orientation: landscape)) {
	/* STEP 13a: Rearrange the navigation so that we don't use the hamburger */
	#menu-icon {
		display: none;
	}
	/* STEP 13b: Stack the H1 and the NAV in a column */
	header {
		flex-direction: column;
	}
	/* STEP 13c: Null out the hover behaviour on the HEADER NAV, and render the UL horizontally across the screen in full-width, distributing the links inside */
	header nav ul, header nav:hover ul {
		position: static;
		display: flex;
		justify-content: space-evenly;
	}
	/* STEP 13d: Size up the HEADER NAV links */
	header nav ul a {
		font-size: 1.5rem;
	}
	/* STEP 4c: Use flexbox to create the 4-column layout */
	main {
		flex-wrap: nowrap;
	}
	main section {
		flex-basis: 25%;
	}
}
/* STEP 4d: Try to capture orientation landscape as well using OR with the 2-column layout breakpoint (use a comma) in STEP 4a */

/* STEP 15: Clip out the CSS, put it into an external file, and try this file on a real mobile device */

/* Hat tip to Matt Helme for his elegant and simple CSS-only mobile menu technique - http://blog.teamtreehouse.com/create-an-absolute-basic-mobile-css-responsive-navigation-menu */
